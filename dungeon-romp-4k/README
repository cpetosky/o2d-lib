4k Dungeon Romp is an homage to Wizardry and all the games it ended up
inspiring. Today, the dungeon crawl genre is probably less popular than its
successor, the Japanese role playing game, but I like to remember that dungeon
crawlers and roleplaying games are an American invention, starting with Dungeons
and Dragons, Wizardry, and Rogue. With that in mind, I set out to recreate a
little of that old-timey 80s magic in 4 measly kilobytes.

4k Dungeon Romp has about 750 lines of code, not including comments, and weighs
in at 4,093 bytes when compiled from Flash CS4 on Windows to an AS3, FP9 SWF.
All graphics are generated and drawn at run-time. There is no sound.

The game came out fairly well concepted from the beginning. The 3D view,
overhead automap view, party stats and scrolling text log were all part of the
original design. I had originally planned to allow a very limited inventory
system (one weapon and one armor), but the text to explain the system and to
handle enemy drops cost more bytes than I was willing to spend. Mechanically,
the simple level-based system works just as well, even though it’s a little less
flavorful. In exchange, I added dynamically-generated textures to the dungeon
walls, which seem to really add to the game.

The overhead map was to make it a little more Rogue-like, but also because one
of my favorite childhood Wizardry knock-offs, Swords and Serpents, used the
split 3D/map view very effectively. I learned in playtesting that people spend
99% of their time looking at the map -- when I release a non-4k version of Romp,
I’ll adjust the size of the map way down and increase the size of the 3D view to
encourage away from that behavior. I’m sure nicer graphics and the like will
help too.

The dungeons are all completely randomly generated, again as a throwback to
Rogue. A perfect maze algorithm would have been significantly cheaper, but those
are really boring, so I used a modification of Jamis’s Dungeon Generator that
I’ve been using for years on little things like this and stripped it down even
further to save on bytes. I strongly recommend checking Jamis’s generator, it’s
really very cool… or you can wait until the non-4k version of Romp is released.

Hardcoded mazes would have been even cheaper still -- so much that I could have
added an equipment system and an end-game scenario — but I think random mazes
are cool. /shrug

I think that’s pretty much it -- thanks for playing and I hope you enjoy it as
much as I do!