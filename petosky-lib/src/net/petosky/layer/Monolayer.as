package net.petosky.layer {	import flash.display.DisplayObject;	import net.petosky.collections.ICollection;			/**	 * @author cpetosky	 */	public class Monolayer extends AbstractLayer implements ICollection {		public function Monolayer(name:String) {			super(name);		}					override public function clear():void {			remove();		}				override public function add(...args):Boolean {			return addArray(args);		}				override public function addArray(a:Array):Boolean {			if (a.length != 1)				throw new ArgumentError("[Monolayer.add] Monolayers can have only a single element!");							while (numChildren > 0)				removeChildAt(0);						addDisplayObject(a[0]);						return true;		}				override public function toArray():Array {			if (numChildren == 1)				return [getChildAt(0)];			else				return [];		}				override public function get length():uint {			return numChildren;		}				override public function get empty():Boolean {			return numChildren == 0;		}								override public function remove(...args):Boolean {			if (numChildren == 0)				return false;			else {				removeChildAt(0);				return true;			}		}			override public function addChild(d:DisplayObject):DisplayObject {			add(d);			return d;		}								override public function addChildAt(d:DisplayObject, index:int):DisplayObject {			return addChild(d);		}	}}