package net.petosky.layer {	import flash.display.DisplayObject;	import flash.display.Sprite;	import flash.errors.IllegalOperationError;		import net.petosky.collections.ICollection;	/**	 * @author cpetosky	 */	public class AbstractLayer extends Sprite implements ICollection {		private var _layerName:String;				public function AbstractLayer(name:String) {			_layerName = name;		}				public function get layerName():String {			return _layerName;		}				public function clear():void {			throw new IllegalOperationError("[AbstractLayer.clear] This function is abstract and must be overridden.");		}		public function remove(...args):Boolean {			throw new IllegalOperationError("[AbstractLayer.remove] This function is abstract and must be overridden.");		}				public function add(...args):Boolean {			throw new IllegalOperationError("[AbstractLayer.add] This function is abstract and must be overridden.");		}		public function addArray(a:Array):Boolean {			throw new IllegalOperationError("[AbstractLayer.addArray] This function is abstract and must be overridden.");		}				public function toArray():Array {			throw new IllegalOperationError("[AbstractLayer.toArray] This function is abstract and must be overridden.");		}				public function get length():uint {			throw new IllegalOperationError("[AbstractLayer.length] This function is abstract and must be overridden.");		}				public function get empty():Boolean {			throw new IllegalOperationError("[AbstractLayer.empty] This function is abstract and must be overridden.");		}		override public function addChild(d:DisplayObject):DisplayObject {			throw new IllegalOperationError("[AbstractLayer.addChild] This function is abstract and must be overridden.");		}						override public function addChildAt(d:DisplayObject, index:int):DisplayObject {			throw new IllegalOperationError("[AbstractLayer.addChildAt] This function is abstract and must be overridden.");		}								protected function addDisplayObject(d:DisplayObject):void {			super.addChild(d);		}				protected function addDisplayObjectAt(d:DisplayObject, index:int):void {			super.addChildAt(d, index);		}	}}