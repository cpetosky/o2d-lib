package net.petosky.collections {	/**	 * @author cpetosky	 */	public class ArrayStack implements IStack {		private var _array:Array = new Array();		public function ArrayStack() {			super();		}								public function clear():void {			_array = [];		}		public function push(o:*):Boolean {			_array.push(o);			return true;		}				public function pop():* {			return _array.pop();		}				public function add(...args):Boolean {			return addArray(args);		}				public function addArray(a:Array):Boolean {			for each (var o:* in a)				push(o);			return true;		}				public function peek():* {			return _array[0];		}				public function toString():String {			const token:String = ", ";			var s:String = "";			for (var i:uint = _array.length - 1; i >= 0; --i)				s += _array[i] + token;			return s.substr(0, s.length - token.length);		}				public function get length():uint {			return _array.length;		}				public function get empty():Boolean {			return (length == 0);		}				public function toArray():Array {			return _array.concat();		}	}}