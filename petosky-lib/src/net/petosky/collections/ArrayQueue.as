package net.petosky.collections {	/**	 * An ArrayQueue implements IQueue with an ActionScript Array.	 * 	 * @see IQueue	 * @author cpetosky	 */	public class ArrayQueue implements IQueue {		protected var _array:Array = new Array();				public function ArrayQueue() {					}								/**		 * @inheritDoc		 */		public function clear():void {			_array = [];		}								/**		 * @inheritDoc		 */		public function peek():Object {			return _array[0];		}		/**		 * @inheritDoc		 */		public function add(...args):Boolean {			return pushArray(args);		}				/**		 * @inheritDoc		 */		public function addArray(a:Array):Boolean {			return pushArray(a);		}								/**		 * @inheritDoc		 */		public function enqueue(o:Object):Boolean {			return push(o);		}				/**		 * @inheritDoc		 */		public function push(o:Object):Boolean {			_array.push(o);			return true;					}								/**		 * @inheritDoc		 */		public function enqueueArray(a:Array):Boolean {			return pushArray(a);		}				/**		 * @inheritDoc		 */		public function pushArray(a:Array):Boolean {			for each (var o:* in a)				push(o);			return true;		}								/**		 * @inheritDoc		 */		public function dequeue():Object {			return pop();		}				/**		 * @inheritDoc		 */		public function pop():Object {			return _array.shift();		}				/**		 * @inheritDoc		 */		public function toString():String {			const token:String = ", ";			var s:String = "";			for (var i:uint = 0; i < _array.length; ++i)				s += _array[i] + token;			return s.substr(0, s.length - token.length);		}								/**		 * @inheritDoc		 */		public function get length():uint {			return _array.length;		}								/**		 * @inheritDoc		 */		public function get empty():Boolean {			return (length == 0);		}								/**		 * @inheritDoc		 */		public function toArray():Array {			return _array.concat();		}	}}