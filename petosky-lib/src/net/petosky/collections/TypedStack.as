package net.petosky.collections {	import flash.utils.describeType;	/**	 * @author cpetosky	 */	public class TypedStack implements IStack {		private var _klass:Class;		private var _stack:IStack;		public function TypedStack(klass:Class, stack:IStack) {			_klass = klass;			_stack = stack;						for each (var o:* in _stack.toArray())				if (!(o is klass))					throw new TypeError("[TypedStack<" + describeType(_klass).@name + ">.iinit] Attempted to enforce " + _klass + " on a stack with elements of another type.");		}				public function clear():void {			_stack.clear();		}					public function push(o:*):Boolean {			if (!(o is _klass))				throw new TypeError("[TypedStack<" + describeType(_klass).@name + ">.push] Tried to push element of wrong type.");			else				return _stack.push(o);		}		public function pop():* {			return _stack.pop();		}				public function peek():* {			return _stack.peek();		}				public function add(...args):Boolean {			return addArray(args);		}				public function addArray(a:Array):Boolean {			for each (var o:* in a)				if (!(o is _klass))					throw new TypeError("[TypedStack<" + describeType(_klass).@name + ">.add] Tried to add element of wrong type.");			return _stack.addArray(a);		}				public function toString():String {			return _stack.toString();		}				public function get length():uint {			return _stack.length;		}				public function get empty():Boolean {			return _stack.empty;		}				public function toArray():Array {			return _stack.toArray();		}	}}