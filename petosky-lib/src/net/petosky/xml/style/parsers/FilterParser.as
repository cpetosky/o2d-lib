package net.petosky.xml.style.parsers {	import flash.filters.GlowFilter;		import flash.filters.BlurFilter;		import flash.filters.DropShadowFilter;		import flash.filters.BevelFilter;			/**	 * @author cpetosky	 */	final public class FilterParser {		public static function parseBevel(s:String):BevelFilter {			var vals:Array = s.split(" ");			var i:uint = 0;			return new BevelFilter(											parseFloat(vals[i++]),				parseFloat(vals[i++]),				ColorParser.parseRGB(vals[i++]),				parseFloat(vals[i++]),				ColorParser.parseRGB(vals[i++]),				parseFloat(vals[i++]),				parseFloat(vals[i++]),				parseFloat(vals[i++]),				parseFloat(vals[i++]),				parseInt(vals[i++]),				vals[i++] as String,				BooleanParser.parseString(vals[i++])			);		}				public static function parseBlur(s:String):BlurFilter {			var vals:Array = s.split(" ");			var i:uint = 0;						return new BlurFilter(				parseFloat(vals[i++]),				parseFloat(vals[i++]),				parseInt(vals[i++])			);			}				public static function parseDropShadow(s:String):DropShadowFilter {			var vals:Array = s.split(" ");			var i:uint = 0;						return new DropShadowFilter(				parseFloat(vals[i++]),				parseFloat(vals[i++]),				ColorParser.parseRGB(vals[i++]),				parseFloat(vals[i++]),				parseFloat(vals[i++]),				parseFloat(vals[i++]),				parseFloat(vals[i++]),				parseInt(vals[i++]),				BooleanParser.parseString(vals[i++]),				BooleanParser.parseString(vals[i++]),				BooleanParser.parseString(vals[i++])			);		}				public static function parseGlow(s:String):GlowFilter {			var vals:Array = s.split(" ");			var i:uint = 0;						return new GlowFilter(				ColorParser.parseRGB(vals[i++]),				parseFloat(vals[i++]),				parseFloat(vals[i++]),				parseFloat(vals[i++]),				parseFloat(vals[i++]),				parseInt(vals[i++]),				BooleanParser.parseString(vals[i++]),				BooleanParser.parseString(vals[i++])			);		}	}}