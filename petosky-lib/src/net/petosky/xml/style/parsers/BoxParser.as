package net.petosky.xml.style.parsers {	/**	 * @author cpetosky	 */	final public class BoxParser {		public static function parsePadding(s:String):Object {			return parseDirections(s, parseSimpleDimension);		}				public static function parseMargin(s:String):Object {			return parseDirections(s, parseDimension);		}				public static function parseDirections(s:String, parser:Function):Object {			var a:Array = s.split(" ");			for (var i:uint = 0; i < a.length; ++i)				a[i] = parser(a[i]);			switch (a.length) {				case 1:					return {top: a[0], right: a[0], bottom: a[0], left: a[0]};				case 2:					return {top: a[0], right: a[1], bottom: a[0], left: a[1]};				case 3:					return {top: a[0], right: a[1], bottom: a[2], left: a[1]};				case 4:					return {top: a[0], right: a[1], bottom: a[2], left: a[3]};			}			return null;		}				public static function parseDimension(s:String):* {			if (s == "auto")				return s;			else				return parseSimpleDimension(s);		}				public static function parseSimpleDimension(s:String):* {			if (s == "inherit")				return s;			else				return parseInt(s);		}	}}