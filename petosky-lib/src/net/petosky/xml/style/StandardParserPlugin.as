package net.petosky.xml.style {	import net.petosky.xml.style.parsers.BorderParser;	import net.petosky.xml.style.parsers.BoxParser;	import net.petosky.xml.style.parsers.ColorParser;	import net.petosky.xml.style.parsers.ArrayParser;	import net.petosky.xml.style.parsers.PositionParser;	/**	 * @author cpetosky	 */	public class StandardParserPlugin implements IStyleParserPlugin {		public function get author():String {			return "Cory Petosky";		}				public function get version():String {			return "0.1";		}				public function get parsers():Object {			return {				width: BoxParser.parseDimension,				height: BoxParser.parseDimension,				fontSize: parseInt,								// Box model properties				margin: BoxParser.parseMargin,				marginRight: parseInt,				marginLeft: parseInt,				marginTop: parseInt,				marginBottom: parseInt,								adjust: BoxParser.parsePadding,				adjustRight: parseInt,				adjustLeft: parseInt,				adjustTop: parseInt,				adjustBottom: parseInt,								padding: BoxParser.parsePadding,				paddingRight: parseInt,				paddingLeft: parseInt,				paddingTop: parseInt,				paddingBottom: parseInt,								border: BorderParser.parse,				borderWidth: BorderParser.parseWidths,				borderStyle: BorderParser.parseStyles,				borderColor: ColorParser.parseMultipleRGB,								borderRight: BorderParser.parse,				borderRightWidth: BorderParser.parseWidth,				borderRightStyle: BorderParser.parseStyle,				borderRightColor: ColorParser.parseRGB,				borderLeft: BorderParser.parse,				borderLeftWidth: BorderParser.parseWidth,				borderLeftStyle: BorderParser.parseStyle,				borderLeftColor: ColorParser.parseRGB,				borderTop: BorderParser.parse,				borderTopWidth: BorderParser.parseWidth,				borderTopStyle: BorderParser.parseStyle,				borderTopColor: ColorParser.parseRGB,				borderBottom: BorderParser.parse,				borderBottomWidth: BorderParser.parseWidth,				borderBottomStyle: BorderParser.parseStyle,				borderBottomColor: ColorParser.parseRGB,											// Color properties				color:ColorParser.parseRGB,				backgroundColor: ColorParser.parseRGB,				backgroundImage: ArrayParser.createSplitter(" "),				backgroundPosition: PositionParser.parse,								// TextFormat properties				letterSpacing: parseInt,				lineHeight: parseFloat,				sharpness: parseFloat,				textIndent: parseInt			};		}				public function get shorthands():Object {			return {				// Box model shorthands				margin: {marginLeft: "left", marginRight: "right", marginTop: "top", marginBottom: "bottom"},				adjust: {adjustLeft: "left", adjustRight: "right", adjustTop: "top", adjustBottom: "bottom"},				padding: {paddingLeft: "left", paddingRight: "right", paddingTop: "top", paddingBottom: "bottom"},				border: {borderWidth: "width", borderStyle: "style", borderColor: "color"},				borderRight: {borderRightWidth: "width", borderRightStyle: "style", borderRightColor: "color"},				borderLeft: {borderLeftWidth: "width", borderLeftStyle: "style", borderLeftColor: "color"},				borderTop: {borderTopWidth: "width", borderTopStyle: "style", borderTopColor: "color"},				borderBottom: {borderBottomWidth: "width", borderBottomStyle: "style", borderBottomColor: "color"},				borderWidth: {borderLeftWidth: "left", borderRightWidth: "right", borderTopWidth: "top", borderBottomWidth: "bottom"},				borderStyle: {borderLeftStyle: "left", borderRightStyle: "right", borderTopStyle: "top", borderBottomStyle: "bottom"},				borderColor: {borderLeftColor: "left", borderRightColor: "right", borderTopColor: "top", borderBottomColor: "bottom"}							};		}				public function get defaults():Object {			return {				width: "auto",				height: "auto",				fontSize: 12,								// Box model properties				marginRight: 0,				marginLeft: 0,				marginTop: 0,				marginBottom: 0,								adjustRight: 0,				adjustLeft: 0,				adjustTop: 0,				adjustBottom: 0,								paddingRight: 0,				paddingLeft: 0,				paddingTop: 0,				paddingBottom: 0,								borderRightWidth: "medium",				borderRightStyle: "none",				borderRightColor: 0,				borderLeftWidth: "medium",				borderLeftStyle: "none",				borderLeftColor: 0,				borderTopWidth: "medium",				borderTopStyle: "none",				borderTopColor: 0,				borderBottomWidth: "medium",				borderBottomStyle: "none",				borderBottomColor: 0,								// Color properties				color: 0,				backgroundColor: 0xFFFFFF,								// TextFormat properties				letterSpacing: 0,				textIndent: 0,								// Text properties				textTransform: "none"							};		}				public function get inheritables():Array {			return [				"backgroundColor",				"color",				"fontFamily",				"fontSize",				"fontSizeAdjust",				"fontStretch",				"fontStyle",				"fontWeight",				"letterSpacing",				"lineHeight",				"textAlign",				"textIndent",				"textTransform",				"wordSpacing"			];		}	}}